CREATE TABLE CLIENTES (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NOME VARCHAR2 (100) NOT NULL,
    EMAIL VARCHAR2 (125) UNIQUE
);

DROP TABLE CLIENTES;

INSERT INTO CLIENTES (NOME, EMAIL) VALUES ('Robson Gabriel', 'Robsonbrabo@gmail.com');
INSERT INTO CLIENTES (NOME, EMAIL) VALUES ('Jair Messias', 'TaOk?@gmail.com');
INSERT INTO CLIENTES (NOME, EMAIL) VALUES ('Nove Dedos', 'Aprovaotriplex@gmail.com');

SELECT NOME,EMAIL FROM CLIENTES;

CREATE TABLE PRODUTOS(
  ID     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  NOME   VARCHAR2(100) NOT NULL,
  PRECO  NUMBER(10)  NOT NULL CHECK (preco >= 0),
  TIPO   VARCHAR2(50) NOT NULL
);

INSERT INTO PRODUTOS (NOME,PRECO,TIPO) VALUES ('SAMSUNG', 1300.00,'celular');
INSERT INTO PRODUTOS (NOME,PRECO,TIPO) VALUES ('MAC', 2500.00, 'notebook');
INSERT INTO PRODUTOS (NOME,PRECO,TIPO) VALUES ('PHILIPS',3200.00,'televisao');

SELECT ID, NOME,PRECO,TIPO FROM PRODUTOS;


UPDATE PRODUTO SET WHERE PRECO = PRECO * 1.10;


    CREATE TABLE PEDIDOS (
  ID         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  cliente_id NUMBER NOT NULL,
  produto_id NUMBER NOT NULL,
  status     VARCHAR2(20) NOT NULL CHECK (status IN ('ABERTO','FINALIZADO','CANCELADO'))
);

SELECT ID,cliente_id, produto_id,status FROM PEDIDOS;

INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (1, 2, 'ABERTO');
 INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (2, 1, 'CANCELADO');
 INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (3, 3, 'FINALIZADO');
 

DELETE FROM PEDIDOS
WHERE status = 'CANCELADO'

DELETE FROM PEDIDOS
WHERE ID = 21;



CREATE TABLE CLIENTES_STG (
  NOME VARCHAR2(100) NOT NULL,
  EMAIL VARCHAR2(120) NOT NULL
);

INSERT INTO CLIENTES_STG (NOME, EMAIL) VALUES ('Robson Gabriel ATUALIZADO', 'Robsonbrabo@gmail.com');
INSERT INTO CLIENTES_STG (NOME, EMAIL) VALUES ('PEDRO NOVO', 'pedro@gmail.com');

MERGE INTO CLIENTES c
USING CLIENTES_STG s
   ON (c.EMAIL = s.EMAIL)
WHEN MATCHED THEN
   UPDATE SET c.NOME = s.NOME
WHEN NOT MATCHED THEN
   INSERT (NOME, EMAIL)
   VALUES (s.NOME, s.EMAIL); 

SELECT ID, NOME, EMAIL FROM CLIENTES